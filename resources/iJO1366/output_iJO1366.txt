>> iJO1366 = readCbModel('ownCloud/PhD/models/iJO1366/iJO1366.mat')

iJO1366 = 

  struct with fields:

              S: [1805×2583 double]
           mets: {1805×1 cell}
              b: [1805×1 double]
         csense: [1805×1 char]
           rxns: {2583×1 cell}
             lb: [2583×1 double]
             ub: [2583×1 double]
              c: [2583×1 double]
      osenseStr: 'max'
          genes: {1367×1 cell}
          rules: {2583×1 cell}
     metCharges: [1805×1 double]
    metFormulas: {1805×1 cell}
       metNames: {1805×1 cell}
        grRules: {2583×1 cell}
     rxnGeneMat: [2583×1367 double]
       rxnNames: {2583×1 cell}
     subSystems: {2583×1 cell}
    description: 'iJO1366.mat'
        modelID: 'iJO1366'

>> [sample, iJO1366unrounded] = chrrSampler(iJO1366, 0, 0, 0);\
 [sample, iJO1366unrounded] = chrrSampler(iJO1366, 0, 0, 0);\
                                                            ↑
Error: Unexpected MATLAB operator.
 
>> [sample, iJO1366unrounded] = chrrSampler(iJO1366, 0, 0, 0);
Checking for width 0 facets...
Currently (P.A, P.b) are in 2583 dimensions
Checking for width 0 facets...
Found 1091 degenerate reactions, adding them to the equality subspace.
> In preprocess (line 169)
  In chrrSampler (line 110) 
Warning: Rank deficient, rank = 2015, tol =  2.883132e-09. 
Now in 568 dimensions after restricting
Removed 2984 zero rows
Preconditioning A with gmscale
Rounding...
Generating samples...
Warning: MATLAB has disabled some advanced graphics rendering features by
switching to software OpenGL. For more information, click here. 
>> changeCobraSolver()
Defined solvers are:
    CBT_LP_SOLVER: gurobi
    CBT_MILP_SOLVER: gurobi
    CBT_QP_SOLVER: gurobi
    CBT_MIQP_SOLVER: gurobi
    CBT_NLP_SOLVER: matlab
>> [sample, iJO1366rounded] = chrrSampler(iJO1366, 0, 0, 1);
Checking for width 0 facets...
Currently (P.A, P.b) are in 2583 dimensions
Checking for width 0 facets...
Found 1091 degenerate reactions, adding them to the equality subspace.
> In preprocess (line 169)
  In chrrSampler (line 110) 
Warning: Rank deficient, rank = 2015, tol =  2.883132e-09. 
Now in 568 dimensions after restricting
Removed 2984 zero rows
Preconditioning A with gmscale
Rounding...
Iteration 1: reg=1.0e-04, ellipsoid vol=0.0e+00, longest axis=8.5e-04, shortest axis=4.6e-08, x0 dist to bdry=3.2e-07, time=8.5e+00 seconds
Iteration 2: reg=1.0e-05, ellipsoid vol=Inf, longest axis=1.9e+03, shortest axis=3.1e-01, x0 dist to bdry=1.3e+00, time=1.1e+01 seconds
Iteration 3: reg=1.0e-06, ellipsoid vol=2.1e+102, longest axis=8.8e+02, shortest axis=8.4e-01, x0 dist to bdry=1.1e+00, time=1.2e+01 seconds
  Converged!
Iteration 4: reg=1.0e-07, ellipsoid vol=1.3e+179, longest axis=8.8e+03, shortest axis=9.7e-01, x0 dist to bdry=1.1e+00, time=4.1e+01 seconds
Maximum volume ellipsoid found, and the origin is inside the transformed polytope.
Generating samples...
>> csvwrite('ownCloud/PhD/models/A_iJO1366_unrounded.csv', iJO1366unrounded)
Error using csvwrite (line 47)
Undefined function 'real' for input arguments of type 'struct'.
 
>> help csvwrite
 csvwrite Write a comma-separated value file.
    csvwrite(FILENAME,M) writes matrix M into FILENAME as 
    comma-separated values.
 
    csvwrite(FILENAME,M,R,C) writes matrix M starting at offset 
    row R, and column C in the file.  R and C are zero-based, so that
    R=0 and C=0 specifies first number in the file.
 
    Notes:
    
    * csvwrite terminates each line with a line feed character and no
      carriage return.
 
    * csvwrite writes a maximum of five significant digits.  For greater
      precision, call DLMWRITE with a precision argument.
 
    * csvwrite does not accept cell arrays for the input matrix M. To
      export cell arrays to a text file, use low-level functions such as
      FPRINTF.
 
    See also csvread, dlmread, dlmwrite.

    Reference page for csvwrite

>> csvwrite('ownCloud/PhD/models/A_iJO1366_unrounded.csv', iJO1366unrounded.A)
>> csvwrite('ownCloud/PhD/models/b_iJO1366_unrounded.csv', iJO1366unrounded.b)
>> csvwrite('ownCloud/PhD/models/b_iJO1366_rounded.csv', iJO1366rounded.b)
>> csvwrite('ownCloud/PhD/models/A_iJO1366_rounded.csv', iJO1366rounded.A)
>> csvwrite('ownCloud/PhD/models/T_iJO1366_rounded.csv', iJO1366rounded.T)
>> csvwrite('ownCloud/PhD/models/N_iJO1366_rounded.csv', iJO1366rounded.N)
>> csvwrite('ownCloud/PhD/models/p_shift_iJO1366_rounded.csv', iJO1366rounded.p_shift)
