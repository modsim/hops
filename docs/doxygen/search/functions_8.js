var searchData=
[
  ['if_1194',['if',['../hops_2FileReader_2CMakeLists_8txt.html#ae50fb01cab8e98b61afe201c854c601c',1,'if(NOT HOPS_LIBRARY_TYPE STREQUAL &quot;HEADER_ONLY&quot;) target_sources(hops PRIVATE CsvReader.hpp CsvReader.cpp Hdf5Reader.hpp SbmlModel.hpp SbmlReader.hpp) endif(NOT HOPS_LIBRARY_TYPE STREQUAL &quot;HEADER_ONLY&quot;) find_package(SBML) if(SBML_FOUND) message(STATUS &quot;SBML found.&quot;) target_link_libraries(hops INTERFACE sbml) target_link_libraries(hops $:&#160;CMakeLists.txt'],['../hops_2FileWriter_2CMakeLists_8txt.html#abfd7683a35bce53c3a99813485dfbf1f',1,'if(NOT HOPS_LIBRARY_TYPE STREQUAL &quot;HEADER_ONLY&quot;) target_sources(hops PRIVATE CsvWriter.hpp CsvWriter.cpp CsvWriterImpl.cpp CsvWriterImpl.hpp FileWriter.hpp FileWriterFactory.hpp FileWriterFactory.cpp FileWriterType.hpp Hdf5Writer.hpp) endif(NOT HOPS_LIBRARY_TYPE STREQUAL &quot;HEADER_ONLY&quot;) find_package(HDF5 COMPONENTS C CXX) if(HDF5_FOUND AND HOPS_HDF5_SUPPORT) if(NOT HOPS_LIBRARY_TYPE STREQUAL &quot;HEADER_ONLY&quot;) target_sources(hops $:&#160;CMakeLists.txt'],['../hops_2LinearProgram_2CMakeLists_8txt.html#a99c1eb5ffa21945ee08e9563c3adda23',1,'if(NOT HOPS_LIBRARY_TYPE STREQUAL &quot;HEADER_ONLY&quot;) target_sources(hops PRIVATE GurobiEnvironmentSingleton.hpp LinearProgram.hpp LinearProgram.cpp LinearProgramClpImpl.hpp LinearProgramFactory.hpp LinearProgramGurobiImpl.hpp LinearProgramSolution.hpp LinearProgramStatus.hpp) endif(NOT HOPS_LIBRARY_TYPE STREQUAL &quot;HEADER_ONLY&quot;) set(GUROBI_ENABLE ON) find_package(GUROBI) if(GUROBI_FOUND) target_compile_definitions(hops INTERFACE HOPS_GUROBI_FOUND) target_compile_definitions(hops $:&#160;CMakeLists.txt']]],
  ['increment_1195',['increment',['../classpcg__detail_1_1no__stream.html#a66595e3e5a36627092dbd551011e3672',1,'pcg_detail::no_stream::increment()'],['../classpcg__detail_1_1specific__stream.html#a27613848a2d0cce630b09fb3f4efd8ea',1,'pcg_detail::specific_stream::increment()']]],
  ['init_1196',['init',['../classhops_1_1RunBase.html#aaac04dbf43b367fd39f43f6f1f37e7b4',1,'hops::RunBase']]],
  ['initializeandqueuefinalizeatexit_1197',['initializeAndQueueFinalizeAtExit',['../classhops_1_1MpiInitializerFinalizer.html#ace657965a7576399f47e1fffef17bf1b',1,'hops::MpiInitializerFinalizer']]],
  ['inside_5fout_1198',['inside_out',['../structpcg__detail_1_1inside__out.html#aeabd4f5caea9c094a22f891a858e3d24',1,'pcg_detail::inside_out']]],
  ['installdataobject_1199',['installDataObject',['../classhops_1_1MarkovChainInterface.html#a8d4d844aa9a8ffa4ea7eb44acf27df74',1,'hops::MarkovChainInterface::installDataObject()'],['../classhops_1_1MarkovChainAdapter.html#aa046d3aa6670069c8d118d37e1649fb3',1,'hops::MarkovChainAdapter::installDataObject()'],['../classhops_1_1AcceptanceRateRecorder.html#a7b9cd5f72307784d6be2a8e677336451',1,'hops::AcceptanceRateRecorder::installDataObject()'],['../classhops_1_1MessageRecorder.html#ac5bbab58fe2aef812d71e5ab9acf3b8a',1,'hops::MessageRecorder::installDataObject()'],['../classhops_1_1NegativeLogLikelihoodRecorder.html#a5a6d5812d1b90e385bed6999fc903df6',1,'hops::NegativeLogLikelihoodRecorder::installDataObject()'],['../classhops_1_1StateRecorder.html#ae28245c1a630541284bed928f38fde6a',1,'hops::StateRecorder::installDataObject()'],['../classhops_1_1TimestampRecorder.html#a46cbfa07a6575797333d0abcd1da20cc',1,'hops::TimestampRecorder::installDataObject()']]],
  ['inversenormalization_1200',['inverseNormalization',['../classhops_1_1TruncatedNormalDistribution.html#a6b6a70cc4bdb02a2c319a6289b2e7caf',1,'hops::TruncatedNormalDistribution']]],
  ['isconsistentproblem_1201',['isConsistentProblem',['../classhops_1_1Problem.html#acd96f0b99b27a6078a523c1a632077b0',1,'hops::Problem']]],
  ['isconstantchain_1202',['isConstantChain',['../namespacehops.html#a506de8f175ef6c121962b823736ea06c',1,'hops::isConstantChain(const std::vector&lt; const std::vector&lt; StateType &gt; * &gt; &amp;chains)'],['../namespacehops.html#a86c3623b2772a1f57f764de7ee44721f',1,'hops::isConstantChain(const std::vector&lt; std::vector&lt; StateType &gt;&gt; &amp;chains)'],['../namespacehops.html#a616a32fa075f29fd02a82439262f9a6f',1,'hops::isConstantChain(const std::vector&lt; const std::vector&lt; StateType &gt; * &gt; &amp;chains, unsigned long dimension)'],['../namespacehops.html#afd17c8bf0e8e11d571fe19a96dbaadb4',1,'hops::isConstantChain(const std::vector&lt; std::vector&lt; StateType &gt;&gt; &amp;chains, unsigned long dimension)']]]
];
